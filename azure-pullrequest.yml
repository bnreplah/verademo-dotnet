# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger: none
   # - main
pr: none

pool:
  #vmImage: ubuntu-latest
  vmImage: 'windows-latest'

variables:
  group: 'Veracode Credentials' # Reference the library containing Veracode Credentials
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

stages: 
- stage: Build
        
  jobs:
  - job: Build_Debug
    displayName: Debug Build

    steps:
      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

      - task: DownloadPipelineArtifact@2
        inputs:
          patterns: '**/*.exe,**/*.dll,**/*.pdb'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.StagingDirectory)
              artifactName: WebApp_Debug

- stage: Security_Testing
  jobs:       
  - job: SAST_Security_Testing
    displayName: Static Analysis Security Testing

    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      displayName: "Download Artifact"
      inputs:
        targetPath: $(Build.StagingDirectory)
        artifact: WebApp_Debug 
        
    - script: ls -la $(Agent.BuildDirectory)
    - script: ls -la $(Build.StagingDirectory)
      displayName: "Show Workspace Contents"
   
    - script: echo 'Prepare Veracode Pipeline SAST'
    - script: curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      displayName: "Download Pipeline Scan"

    - script: unzip -o pipeline-scan-LATEST.zip
      displayName: "Unzip Pipeline Scan"

    - script: java -jar pipeline-scan.jar --version
      displayName: "Pipeline Scan Version" 
      
    - script: java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(Build.StagingDirectory)\$(system.teamProject).zip || true
      displayName: "Running Analysis"
      
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml   
      displayName: 'Run a multi-line script'
