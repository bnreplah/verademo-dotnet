# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
# This is an example of using VeraDemoDotNet test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.

##  Main Branch

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# - task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: 'Debug'


# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: DownloadPipelineArtifact@2
  inputs:
    patterns: '**/*.exe,**/*.dll,**/*.pdb' # ensures Veracode gets the PDB files for Static Analysis

# Add a task here to remove additional runtime files that are not needed for the upload such as the roslyn directory if it is present. Reupload the new artifact and use that artifact for scanning

# This task makes the pipeline build artifacts available in a known location for upload to Veracode
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactstagingdirectory)\Verademo-dotnet.zip'
    artifactName: Debug

####################################################################################################
## Veracode SCAN
####################################################################################################
####################################################
# Upload and Scan
# ####################################################

- task: Veracode@3
  continueOnError: true
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'APIServiceAccount'
    veracodeAppProfile: 'Verademo-net'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    sandboxName: 'ADO'
    createSandBox: true
    createProfile: true
    failBuildIfUploadAndScanBuildStepFails: true
    importResults: true
    failBuildOnPolicyFail: false
    maximumWaitTime: '360'

#################################################################
# Pipeline Scanner
#################################################################
## https://docs.veracode.com/r/Pipeline_Scan
- task: CmdLine@2
  displayName: Veracode Static Pipeline Scanner
  continueOnError: true
  inputs:
    script: |
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      echo "----------------------------------------------------- Pulling down a policy to use in a pipeline scan -----------------------------------------------------"
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -rp "Vulnerable Policy 2"

      echo "----------------------------------------------------- Running a pipeline scan with a policy -----------------------------------------------------"

      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(build.artifactstagingdirectory)\Verademo-dotnet.zip -id true -sd true -pf "Vulnerable_Policy_2.json"
########################################################
# Pipeline scan fail on CWE
########################################################
- task: PowerShell@2
  displayName: Veracode Static Pipeline Scanner
  continueOnError: true
  inputs:
    targetType: 'inline'
    script: |
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(build.artifactstagingdirectory)\Verademo-dotnet.zip -id true -sd true -fc "117,81,80"

########################################################
# SCA Agent Based scan
########################################################
# https://docs.veracode.com/r/Veracode_SCA_Agent_Commands
# https://docs.veracode.com/r/c_sc_ci_script
- task: PowerShell@2
  displayName: Veracode SCA Scanner
  continueOnError: true
  inputs:
    targetType: 'inline' #Before it was looking for powershell script to execute, and the target type by default is filepath
    script: |
      Set-ExecutionPolicy AllSigned -Scope Process -Force
      iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1')) 
      srcclr scan --update-advisor --allow-dirty --ws $(WORKSPACE_SLUG)
  env:
    SRCCLR_API_TOKEN: $(SRCCLRTOKEN)


####################################################################
# Veracode Flaw Importer
####################################################################


# - task: Veracode Flaw Importer@3
#   inputs:
#     ConnectionDetailsSelection: 'Service Connection'
#     AnalysisService: 'APIServiceAccount'
#     failBuildIfFlawImporterFails: true
#     veracodeAppProfile: '$(system.teamProject)'
#     sandboxName: 'ADO'
#     scanType: 'Dynamic, Static'
#     importType: 'All Flaws Violating Policy'
#     workItemType: 'Bug'
#     area: '$(system.teamProject)'
#     overwriteAreaPathInWorkItemsOnImport: true
#     iterationPath: '$(system.teamProject)'
#     addCweAsATag: true
#     foundInBuild: true
#     addScanNameAsATag: true
#     flawImportLimit: '1000'


#################################################
# Downloading and Running API Wrapper
#################################################
# https://docs.veracode.com/r/c_about_wrappers

